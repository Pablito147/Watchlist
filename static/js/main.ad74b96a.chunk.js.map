{"version":3,"sources":["Components/Task.jsx","Components/Tasks.jsx","Components/AddTask.jsx","Components/Button.jsx","Components/Header.jsx","App.js","reportWebVitals.js","index.js"],"names":["Task","task","onDelete","onToggle","useState","Date","toLocaleDateString","date","className","text","rating","duratation","type","style","color","cursor","marginTop","fontSize","marginLeft","onClick","id","Tasks","tasks","map","AddTask","onAdd","setFilm","reminder","setReminder","setRating","setDuratation","setType","onSubmit","e","preventDefault","alert","placeholder","value","onChange","target","currentTarget","checked","Button","backgroundColor","Header","title","buttonTogle","showInputs","App","day","setTasks","useEffect","dataFromStore","localStorage","getItem","JSON","parse","setItem","stringify","setShowInputs","Math","floor","random","newTas","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ad74b96a.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { FaTimes } from 'react-icons/fa';\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n    const [date, setDate] = useState((new Date().toLocaleDateString()));\r\n\r\n\r\n    return (\r\n        <div className='table-container'>\r\n            <table className='table'>\r\n                <tbody>\r\n                    <tr className='table-movie-titles'>\r\n                        <th>Film</th>\r\n                        <th>Rating</th>\r\n                        <th>Duratation</th>\r\n                        <th>Type</th>\r\n                        <th>Date and time</th>\r\n                    </tr>\r\n                    <tr className='table-movie-values'>\r\n                        <td>{task.text}</td>\r\n                        <td>{task.rating}</td>\r\n                        <td>{task.duratation}</td>\r\n                        <td>{task.type}</td>\r\n                        <td>{date}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n            <h3><FaTimes style={{ color: 'red', cursor: 'pointer', marginTop: '32px', fontSize: '20px', marginLeft: \"5px\" }} onClick={() => onDelete(task.id)} /></h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import React from 'react'\r\n\r\nimport Task from './Task';\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n    return (\r\n        <>\r\n            {tasks.map(task => (\r\n                <Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle}></Task>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import { React, useState } from 'react';\r\n\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n\r\n    const [text, setFilm] = useState('');\r\n    // const [day, setDate] = useState({});\r\n    const [reminder, setReminder] = useState(true);\r\n    const [rating, setRating] = useState('');\r\n    const [duratation, setDuratation] = useState('');\r\n    const [type, setType] = useState('');\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (!(text && rating && duratation && type)) {\r\n            alert('Please add text')\r\n            return\r\n        }\r\n        // setDate({ currentTime: new Date().toLocaleString() })\r\n\r\n        onAdd({ text, rating, duratation, type, reminder })\r\n\r\n        setFilm('');\r\n        setRating('');\r\n        setDuratation('');\r\n        //setDate('');\r\n        setType('');\r\n        setReminder(false);\r\n    }\r\n    return (\r\n        <div>\r\n            <form className='add-form' onSubmit={onSubmit}>\r\n                <div className='form-control'>\r\n                    <label>Film</label>\r\n                    <input type='text' placeholder='addFilm' value={text} onChange={(e) => setFilm(e.target.value)}></input>\r\n                </div>\r\n                <div className='form-control'>\r\n                    <label>Rating</label>\r\n                    <input type='text' placeholder='addRation' value={rating} onChange={(e) => setRating(e.target.value)}></input>\r\n                </div>\r\n                <div className='form-control'>\r\n                    <label>Duratation</label>\r\n                    <input type='text' placeholder='addDuratation' value={duratation} onChange={(e) => setDuratation(e.target.value)}></input>\r\n                </div>\r\n                <div className='form-control'>\r\n                    <label>Type of movie</label>\r\n                    <input type='text' placeholder='add type of movie' value={type} onChange={(e) => setType(e.target.value)}></input>\r\n                </div>\r\n                <div className='form-control form-control-check'>\r\n                    <label>Set reminder</label>\r\n                    <input type='checkbox' value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)} checked={reminder}></input>\r\n                </div>\r\n                {/* <div className='form-control'>\r\n                    <label>Time and day</label>\r\n                    <input type='text' placeholder='add time and day' value={day} onChange={(e) => setDate(e.target.value)}></input>\r\n                </div> */}\r\n                <input type='submit' className='btn btn-block' value='Save task'></input>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import React from 'react'\r\n\r\nconst Button = ({ color, text, onClick }) => {\r\n    return (\r\n        <button style={{ backgroundColor: color }} className='btn' onClick={onClick} >{text}  </button>\r\n    )\r\n}\r\n\r\nexport default Button\r\n","import PropTypes from 'prop-types';\r\n\r\nimport Button from './Button';\r\n\r\nconst Header = ({ title, buttonTogle, showInputs }) => {\r\n\r\n    return (\r\n        <div>\r\n            <header className='header'>\r\n                <h1>{title}</h1>\r\n                <Button color={showInputs ? 'red' : 'green'} text={showInputs ? 'Close' : 'Add'} onClick={buttonTogle}></Button>\r\n            </header>\r\n        </div>\r\n    )\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Header\r\n","import { useState, useEffect } from 'react';\n\nimport './App.css';\n\nimport Tasks from './Components/Tasks';\nimport AddTask from './Components/AddTask';\nimport Header from './Components/Header';\n\nfunction App() {\n  const [tasks, setTasks] = useState([\n    {\n      id: 1,\n      text: 'text dfasd',\n      day: 'March 14 ',\n      reminder: true\n    }\n  ])\n\n  useEffect(() => {\n    const dataFromStore = localStorage.getItem(\"tasks\");\n    if (dataFromStore) {\n      setTasks(JSON.parse(dataFromStore))\n    }\n  }, [])\n  useEffect(() => {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks))\n  });\n\n  const [showInputs, setShowInputs] = useState(false);\n\n  const addTask = (task) => {\n    const id = Math.floor(Math.random() * 100000) + 1;\n    const newTas = { id, ...task };\n    setTasks([...tasks, newTas]);\n  }\n  const deleteTask = (id) => {\n    setTasks(tasks.filter(task => task.id !== id))\n  }\n\n  const toggleReminder = (id) => {\n    setTasks(tasks.map(task => task.id === id ? { ...task, reminder: !task.reminder } : task))\n  }\n  return (\n    <div className='container'>\n      <Header showInputs={showInputs} title='Cinema tracker' buttonTogle={() => setShowInputs(!showInputs)}></Header>\n      { showInputs && <AddTask onAdd={addTask}></AddTask>}\n      {tasks.length > 0 ?\n        <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder}></Tasks>\n        : \"no tasks\"\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}